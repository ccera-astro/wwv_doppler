options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: wwv_doppler
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: det_srate
  id: variable
  parameters:
    comment: 2nd stage decimator output rate
    value: '500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 228.0]
    rotation: 0
    state: true
- name: fftsize
  id: variable
  parameters:
    comment: ''
    value: '2048'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 964.0]
    rotation: 0
    state: true
- name: first_len
  id: variable
  parameters:
    comment: ''
    value: len(first_taps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 540.0]
    rotation: 0
    state: true
- name: first_taps
  id: variable_low_pass_filter_taps
  parameters:
    beta: '6.76'
    comment: The taps for the filter above
    cutoff_freq: 100e3
    gain: '1.0'
    samp_rate: samp_rate
    width: 50e3
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 356.0]
    rotation: 0
    state: true
- name: high_rate
  id: variable
  parameters:
    comment: 1st stage decimator output rate
    value: '250000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 20.0]
    rotation: 0
    state: true
- name: mid_rate
  id: variable
  parameters:
    comment: 2nd stage decimator output rate
    value: '5000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 116.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 2.5e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 20.0]
    rotation: 0
    state: enabled
- name: second_len
  id: variable
  parameters:
    comment: ''
    value: len(second_taps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 540.0]
    rotation: 0
    state: true
- name: second_taps
  id: variable_low_pass_filter_taps
  parameters:
    beta: '6.76'
    comment: The taps for the filter above
    cutoff_freq: '2000'
    gain: '1.0'
    samp_rate: high_rate
    width: '1200'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 356.0]
    rotation: 0
    state: true
- name: third_len
  id: variable
  parameters:
    comment: ''
    value: len(third_taps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 540.0]
    rotation: 0
    state: true
- name: third_taps
  id: variable_low_pass_filter_taps
  parameters:
    beta: '6.76'
    comment: The taps for the filter above
    cutoff_freq: '200'
    gain: '1.0'
    samp_rate: mid_rate
    width: '20'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 356.0]
    rotation: 0
    state: true
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 780.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '1000.0'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 876.0]
    rotation: 0
    state: true
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 844.0]
    rotation: 0
    state: true
- name: device
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Device string
    short_id: ''
    type: str
    value: '"airspy=0"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 612.0]
    rotation: 0
    state: true
- name: fft_filter_xxx_0
  id: fft_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: int(high_rate/mid_rate)
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    samp_delay: '0'
    taps: second_taps
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [712, 156.0]
    rotation: 0
    state: true
- name: fft_filter_xxx_0_0
  id: fft_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: int(mid_rate/det_srate)
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    samp_delay: '0'
    taps: third_taps
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 180.0]
    rotation: 0
    state: true
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fftsize
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.blackmanharris(fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 820.0]
    rotation: 0
    state: true
- name: freq
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Frequency
    short_id: ''
    type: eng_float
    value: 400.0e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 612.0]
    rotation: 0
    state: true
- name: freq_xlating_fft_filter_ccc_0
  id: freq_xlating_fft_filter_ccc
  parameters:
    affinity: ''
    alias: ''
    center_freq: offset
    comment: 'Rotate down to baseband--the hardware is

      tuned ''offset'' low, to avoid any DC offset

      Then this rotates and filters so that

      desired signal is in the middle of the passband'
    decim: int(samp_rate/high_rate)
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    samp_delay: '0'
    samp_rate: samp_rate
    taps: first_taps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 156.0]
    rotation: 0
    state: true
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import sys
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 20.0]
    rotation: 0
    state: true
- name: logtime
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Logging interval
    short_id: ''
    type: intx
    value: '10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [592, 612.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: 'We use a 3-stage filter to reduce CPU load

      The 1st stage is fairly "light"

      With the fine filtering ocurring at the last stage.'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 36.0]
    rotation: 0
    state: true
- name: offset
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Frequency Offset
    short_id: ''
    type: eng_float
    value: 2e4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 612.0]
    rotation: 0
    state: true
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: device
    bb_gain0: '20'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: freq-offset
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: rfgain
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'False'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '20'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 172.0]
    rotation: 0
    state: enabled
- name: prefix
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Log file name prefix
    short_id: ''
    type: str
    value: '"wwv-10MHz-"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 612.0]
    rotation: 0
    state: true
- name: rfgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: RF Gain
    short_id: ''
    type: eng_float
    value: '40'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 612.0]
    rotation: 0
    state: true
- name: single_pole_iir_filter_xx_0
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 724.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: filtered_rf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 196.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: fast_rf_1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 52.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: filtered_rf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 828.0]
    rotation: 0
    state: true
- name: wwv_logger
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport time\n\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Log WWV\
      \ doppler data\"\"\"\n\n    def __init__(self, log_rate=1.0, prefix=\"./\",\
      \ samp_rate=1e3, fftsize=2048):  # only default arguments here\n        \"\"\
      \"arguments to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='WWV data Logger',   # will show up in\
      \ GRC\n            in_sig=[(np.float32,fftsize)],\n            out_sig=None\n\
      \        )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.log_rate\
      \ = log_rate\n        self.prefix = prefix\n        self.avg = 0.0\n       \
      \ self.now = time.time()\n        self.count = 0\n        self.samp_rate = samp_rate\n\
      \        self.fftsize = fftsize\n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"Log at defined rate\"\"\"\n        \n        for v in input_items[0]:\n\
      \            mx = np.argmax(v)\n            mxf = mx - self.fftsize/2\n    \
      \        mxf *= (self.samp_rate/self.fftsize)\n            self.avg += mxf\n\
      \            self.count += 1\n            if ((time.time()) - self.now >= self.log_rate):\n\
      \                ltp = time.gmtime()\n                d = \"%04d%02d%02d\" %\
      \ (ltp.tm_year, ltp.tm_mon, ltp.tm_mday)\n                self.avg /= self.count\n\
      \                fn = self.prefix + d + \".csv\"\n                fp = open(fn,\
      \ \"a\")\n                fp.write (\"%02d,%02d,%0d,%f\\n\" % (ltp.tm_hour,\
      \ ltp.tm_min, ltp.tm_sec, self.avg))\n                self.avg = 0\n       \
      \         self.count = 0\n                self.now = time.time()\n         \
      \   \n  \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    fftsize: fftsize
    log_rate: logtime
    maxoutbuf: '0'
    minoutbuf: '0'
    prefix: prefix
    samp_rate: det_srate
  states:
    _io_cache: ('WWV data Logger', 'blk', [('log_rate', '1.0'), ('prefix', "'./'"),
      ('samp_rate', '1000.0'), ('fftsize', '2048')], [('0', 'float', 2048)], [], 'Log
      WWV doppler data', ['fftsize', 'log_rate', 'prefix', 'samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1344, 708.0]
    rotation: 0
    state: enabled

connections:
- [blocks_complex_to_mag_squared_0, '0', blocks_multiply_const_xx_0, '0']
- [blocks_multiply_const_xx_0, '0', single_pole_iir_filter_xx_0, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_0, '0']
- [fft_filter_xxx_0, '0', fft_filter_xxx_0_0, '0']
- [fft_filter_xxx_0_0, '0', virtual_sink_0, '0']
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [freq_xlating_fft_filter_ccc_0, '0', fft_filter_xxx_0, '0']
- [freq_xlating_fft_filter_ccc_0, '0', virtual_sink_1, '0']
- [osmosdr_source_0, '0', freq_xlating_fft_filter_ccc_0, '0']
- [single_pole_iir_filter_xx_0, '0', wwv_logger, '0']
- [virtual_source_0, '0', blocks_stream_to_vector_0, '0']

metadata:
  file_format: 1
